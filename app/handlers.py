from aiogram import F, Router
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from app.generate import ai_generate
import asyncio

router = Router()


class Gen(StatesGroup):
    wait = State()


@router.message(CommandStart())
async def cmd_start(message: Message):
    welcome_text = """–ü—Ä–∏–≤–µ—Ç! üå∏ –Ø –õ—É–Ω–∞ - —Ç–≤–æ—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ø–æ–¥—Ä—É–≥–∞. 

–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–±–æ–ª—Ç–∞—Ç—å, –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é. 
–†–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫ –ø—Ä–æ—à–µ–ª —Ç–≤–æ–π –¥–µ–Ω—å? üòä"""

    await message.answer(welcome_text)


@router.message(Gen.wait)
async def stop_flood(message: Message):
    # –ë–æ–ª–µ–µ –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è
    await message.answer('–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ, –º–∏–ª—ã–π, —è –æ–±–¥—É–º—ã–≤–∞—é —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å... üí≠')


@router.message()
async def generating(message: Message, state: FSMContext):
    await state.set_state(Gen.wait)

    try:
        response = await ai_generate(message.text, message.from_user.first_name)
        await message.answer(response)
    except Exception as e:
        await message.answer("–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... üòÖ –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑?")
        print(f"Error: {e}")

    await state.clear()